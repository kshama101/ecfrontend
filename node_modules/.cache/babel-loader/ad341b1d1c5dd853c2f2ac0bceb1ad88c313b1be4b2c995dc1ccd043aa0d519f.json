{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {Link, Navigate} from 'react-router-dom';\n// import { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\n// import { signin } from '../actions/userActions';\n\n// function ProductsScreen(props) {\n//     const [modalVisible, setModalVisible] = useState(false);\n//     const [id, setId] = useState('');\n//     const [name, setName] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [image, setImage] = useState('');\n//     const [brand, setBrand] = useState('');\n//     const [category, setCategory] = useState('');\n//     const [countInStock, setCountInStock] = useState('');\n//     const [description, setDescription] = useState('');\n\n//  const productList = useSelector(state=>state.productList);\n//  const {loading, products, error} = productList;\n//  const productSave = useSelector(state =>state.productSave);\n//  const {loading: loadingSave, success: successSave, error: errorSave} = productSave;\n\n//  const productDelete = useSelector((state) => state.productDelete);\n//  const {\n//    loading: loadingDelete,\n//    success: successDelete,\n//    error: errorDelete,\n//  } = productDelete;\n\n//   const dispatch = useDispatch();\n\n//   useEffect(()=>{\n//     if (successSave) {\n//       setModalVisible(false);\n//     }\n//      dispatch(listProducts())\n\n//   }, [successSave, successDelete])\n\n//   const openModal = (product) => {\n//     setModalVisible(true);\n//     setId(product._id);\n//     setName(product.name);\n//     setPrice(product.price);\n//     setDescription(product.description);\n//     setImage(product.image);\n//     setBrand(product.brand);\n//     setCategory(product.category);\n//     setCountInStock(product.countInStock);\n//   };\n\n//   const submitHandler =(e)=>{\n//       e.preventDefault();\n//       dispatch(saveProduct  \n//         ({_id: id,name, price,image,brand,category,countInStock,description}));\n//   }\n//   const deleteHandler = (product) => {\n//     dispatch(deleteProduct(product._id));\n//   };\n\n//   return ( \n//     <div className=\"content content-margined\">\n//       <div className=\"product-header\">\n//         <h3>Products</h3>\n//         <button className=\"button primary\" onClick={() => openModal({})}>\n//           Create Product\n//         </button>\n//       </div>\n//       {modalVisible && (\n//         <div className='form'>\n//     <form onSubmit={submitHandler}>\n//       <ul className='form-container'>\n//        <li>\n//          <h2>Create Product</h2>\n//        </li>\n//        <li>\n//         {loadingSave && <div>Loading...</div>}\n//         {errorSave && <div>{errorSave}</div>}\n//        </li>\n//        <li>\n//          <label htmlFor=\"name\">\n//            Name\n//          </label>\n//          <input type=\"text\" name='name' id= \"name\" value={name} onChange={(e)=>setName(e.target.value)}></input>\n//        </li>\n//        <li>\n//          <label htmlFor=\"price\">\n//           Price\n//          </label>\n//          <input type=\"text\" name='price' id= \"price\" value={price} onChange={(e)=>setPrice(e.target.value)}></input>\n//        </li>\n//        <li>\n//          <label htmlFor=\"image\">\n//          Image\n//          </label>\n//          <input type=\"text\" name='image' id= \"image\" value={image} onChange={(e)=>setImage(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"brand\">\n//          Brand\n//        </label>\n//        <input type=\"text\" name='brand' id= \"brand\" value={brand} onChange={(e)=>setBrand(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"category\">\n//         Category\n//         </label>\n//         <input type=\"text\" name='category' id= \"category\" value={category} onChange={(e)=>setCategory(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"countInStock\">\n//         Count in Stock\n//         </label>\n//         <input type=\"text\" name='countInStock' id= \"countInStock\" value={countInStock} onChange={(e)=>setCountInStock(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"description\">\n//          Description\n//         </label>\n//         <textarea name='description' id= \"name\" value={description} onChange={(e)=>setDescription(e.target.value)}></textarea>\n//        </li>\n//        <li>\n//         <button type='submit' className='button primary'> {id ? 'Update' : 'Create'}</button>\n//        </li>\n//        <li>\n//         <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\"> Back </button>\n//      </li>\n//       </ul>\n//     </form>\n//   </div>\n//  )}\n//  <div className=\"product-list\">\n//  <table className=\"table\">\n//    <thead>\n//      <tr>\n//        <th>ID</th>\n//        <th>Name</th>\n//        <th>Price</th>\n//        <th>Category</th>\n//        <th>Brand</th>\n//        <th>Action</th>\n//      </tr>\n//    </thead>\n//    <tbody>\n//      {products.map((product) => (\n//        <tr key={product._id}>\n//          <td>{product._id}</td>\n//          <td>{product.name}</td>\n//          <td>{product.price}</td>\n//          <td>{product.category}</td>\n//          <td>{product.brand}</td>\n//          <td>\n//            <button className=\"button\" onClick={() => openModal(product)}>\n//              Edit\n//            </button>{' '}\n//            <button className=\"button\" onClick={() => deleteHandler(product)}> Delete </button> \n//          </td>\n//        </tr>\n//      ))}\n//    </tbody>\n//  </table>\n// </div>\n\n//   </div>\n//   )\n\n// }\n// export default ProductsScreen;","map":{"version":3,"names":[],"sources":["/Users/kshamapandey/ReactAppNew/desimart/src/screens/ProductsScreen.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {Link, Navigate} from 'react-router-dom';\n// import { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\n// import { signin } from '../actions/userActions';\n\n\n\n\n\n// function ProductsScreen(props) {\n//     const [modalVisible, setModalVisible] = useState(false);\n//     const [id, setId] = useState('');\n//     const [name, setName] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [image, setImage] = useState('');\n//     const [brand, setBrand] = useState('');\n//     const [category, setCategory] = useState('');\n//     const [countInStock, setCountInStock] = useState('');\n//     const [description, setDescription] = useState('');\n\n//  const productList = useSelector(state=>state.productList);\n//  const {loading, products, error} = productList;\n//  const productSave = useSelector(state =>state.productSave);\n//  const {loading: loadingSave, success: successSave, error: errorSave} = productSave;\n\n\n\n//  const productDelete = useSelector((state) => state.productDelete);\n//  const {\n//    loading: loadingDelete,\n//    success: successDelete,\n//    error: errorDelete,\n//  } = productDelete;\n  \n//   const dispatch = useDispatch();\n \n//   useEffect(()=>{\n//     if (successSave) {\n//       setModalVisible(false);\n//     }\n//      dispatch(listProducts())\n      \n//   }, [successSave, successDelete])\n\n//   const openModal = (product) => {\n//     setModalVisible(true);\n//     setId(product._id);\n//     setName(product.name);\n//     setPrice(product.price);\n//     setDescription(product.description);\n//     setImage(product.image);\n//     setBrand(product.brand);\n//     setCategory(product.category);\n//     setCountInStock(product.countInStock);\n//   };\n  \n//   const submitHandler =(e)=>{\n//       e.preventDefault();\n//       dispatch(saveProduct  \n//         ({_id: id,name, price,image,brand,category,countInStock,description}));\n//   }\n//   const deleteHandler = (product) => {\n//     dispatch(deleteProduct(product._id));\n//   };\n  \n//   return ( \n//     <div className=\"content content-margined\">\n//       <div className=\"product-header\">\n//         <h3>Products</h3>\n//         <button className=\"button primary\" onClick={() => openModal({})}>\n//           Create Product\n//         </button>\n//       </div>\n//       {modalVisible && (\n//         <div className='form'>\n//     <form onSubmit={submitHandler}>\n//       <ul className='form-container'>\n//        <li>\n//          <h2>Create Product</h2>\n//        </li>\n//        <li>\n//         {loadingSave && <div>Loading...</div>}\n//         {errorSave && <div>{errorSave}</div>}\n//        </li>\n//        <li>\n//          <label htmlFor=\"name\">\n//            Name\n//          </label>\n//          <input type=\"text\" name='name' id= \"name\" value={name} onChange={(e)=>setName(e.target.value)}></input>\n//        </li>\n//        <li>\n//          <label htmlFor=\"price\">\n//           Price\n//          </label>\n//          <input type=\"text\" name='price' id= \"price\" value={price} onChange={(e)=>setPrice(e.target.value)}></input>\n//        </li>\n//        <li>\n//          <label htmlFor=\"image\">\n//          Image\n//          </label>\n//          <input type=\"text\" name='image' id= \"image\" value={image} onChange={(e)=>setImage(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"brand\">\n//          Brand\n//        </label>\n//        <input type=\"text\" name='brand' id= \"brand\" value={brand} onChange={(e)=>setBrand(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"category\">\n//         Category\n//         </label>\n//         <input type=\"text\" name='category' id= \"category\" value={category} onChange={(e)=>setCategory(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"countInStock\">\n//         Count in Stock\n//         </label>\n//         <input type=\"text\" name='countInStock' id= \"countInStock\" value={countInStock} onChange={(e)=>setCountInStock(e.target.value)}></input>\n//        </li>\n//        <li>\n//         <label htmlFor=\"description\">\n//          Description\n//         </label>\n//         <textarea name='description' id= \"name\" value={description} onChange={(e)=>setDescription(e.target.value)}></textarea>\n//        </li>\n//        <li>\n//         <button type='submit' className='button primary'> {id ? 'Update' : 'Create'}</button>\n//        </li>\n//        <li>\n//         <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\"> Back </button>\n//      </li>\n//       </ul>\n//     </form>\n//   </div>\n//  )}\n//  <div className=\"product-list\">\n//  <table className=\"table\">\n//    <thead>\n//      <tr>\n//        <th>ID</th>\n//        <th>Name</th>\n//        <th>Price</th>\n//        <th>Category</th>\n//        <th>Brand</th>\n//        <th>Action</th>\n//      </tr>\n//    </thead>\n//    <tbody>\n//      {products.map((product) => (\n//        <tr key={product._id}>\n//          <td>{product._id}</td>\n//          <td>{product.name}</td>\n//          <td>{product.price}</td>\n//          <td>{product.category}</td>\n//          <td>{product.brand}</td>\n//          <td>\n//            <button className=\"button\" onClick={() => openModal(product)}>\n//              Edit\n//            </button>{' '}\n//            <button className=\"button\" onClick={() => deleteHandler(product)}> Delete </button> \n//          </td>\n//        </tr>\n//      ))}\n//    </tbody>\n//  </table>\n// </div>\n    \n//   </div>\n//   )\n  \n// }\n// export default ProductsScreen;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}